Psybrus Engine & Tool Chain
===========================

Introduction:
-------------
My personal engine which I use for Ludum Dare, tech prototyping, and testing out new ideas.

No demo games are in this repo anymore, please see https://github.com/Psybrus/DevelopmentGame.

This is intended to be added as a submodule of a game repo, look at https://github.com/Psybrus/DevelopmentGame.

Linux Users:
------------
Run either make_gmake_linux_build.sh, this will generate makefiles in the Projects folder.
You will need to build a version of boost with Clang, otherwise it will not link correctly.

Dependencies:
1) Clang 3.5
2) ccache
3) Boost 1.57
Will probably need to be built against clang and libc++:
    b2 toolset=clang cxxflags="-stdlib=libc++" linkflags="-stdlib=libc++" link=static

Then set BOOST_ROOT environment var to its path (i.e. ~/path/to/boost_1_57_0).

Linux users can also build for HTML5, but they will also need to build Emscripten themselves. Details of this to be written later.


Windows Users:
-------------
Run make_vs2013_build.bat to generate the projects + solution in the Projects folder.
I've setup a natvis file for use with Psybrus, as it helps a lot with debugging (particularly decoding names and resource structures for an at a glance view). Drop this in the "My Documents\Visual Studio 2012\Visualizers" folder and it should start to work. I will soon provide a setup tool to setup this, and possibly more.

Dependencies:
1) Visual Studio 2013
2) Windows SDK 8.1
3) Boost 1.57
Requires static linking libs, so the following:
    b2 link=static runtime-link=static stage

Then set BOOST_ROOT environment var to its path (i.e. C:\Path\to\boost_1_57_0).
